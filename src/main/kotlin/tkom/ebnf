operator_przypisania = "="
operator_porównania = "==" | "!=" | "<=" | ">=" | "<" | ">"
operator_logiczny = "&&" | "||"
negacja = "!"
separator_dzisiętny = "."
operator_liczbowy = "+" | minus | "*" | "/" | "^" | "%"
prefix_binarny = "0", "b"
prefix_szesnastkowy = "0", "x"
prefix_ósemkowy = "0"
cyfra_dzisiętna_bez_zera = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
cyfra_dzisiętna = "0" | cyfra_dzisiętna_bez_zera
cyfra_ósemkowa_bez_zera =  "1" | "2" | "3" | "4" | "5" | "6" | "7"
cyfra_ósemkowa = "0" | cyfra_ósemkowa_bez_zera
cyfra_szesnastkowa_bez_zera = "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "A" | "B" | "C" | "D" | "E" | "F"
cyfra_szesnastkowa = "0" | cyfra_szesnastkowa_bez_zera
cyfra_binarna_bez_zera = "1"
cyfra_binanarna = "0" | "1"
identyfikator_zmiennej = [:alpha:][:alnum:]*
identyfikato_funkcji = [:alpha:][:alnum:]*
słowo_kluczowe_if = "if"
słowo_kluczowe_fun = "fun"
słowo_kluczowe_else = "else"
słowo_kluczowe_return = "return"
słowo_kluczowe_break = "break"
słowo_kluczowe_continue = "continue"
słowo_kluczowe_for = "for"
nawias_okragly_otwierajacy = "("
nawias_klamrowy_otwierajacy = "{"
nawias_okragly_zamykajacy = ")"
nawias_klamrowy_zamykajacy = "}"
przecinek = ","
minus = "-"
srednik = ";"

operacja = definicja_funkcji | wyrażenie_złożone | przypisanie | słowo_kluczowe_return, [operacja] | słowo_kluczowe_return, [warunek] | petla

przypisanie = identyfikator_zmiennej, operator_przypisania, wyrażenie_złożone

porównanie = wyrażenie_złożone, [operator_porównania, wyrażenie złożone]

warunek = { nawias_okragly_otwierajacy }, porównanie, { operator_logiczny, warunek }, { nawias_okragly_zamykajacy }

definicja_funkcji = słowo_kluczowe_fun, identyfikator_funkcji, nawias_okragly_otwierajacy, argumenty,nawias_okragly_zamykajacy

wywolanie_funkcji = identyfikator_funkcji, nawias_okragly_otwierajacy, argumenty,nawias_okragly_zamykajacy

argumenty = [identyfikator_zmiennej] | idendyfikator_zmiennej, { przecinek, identyfikator_zmiennej }

instrukcja_warunkowa = słowo_kluczowe_if, nawias_okragly_otwierajacy, warunek, nawias_okragly_zamykajacy, nawias_klamrowy_otwierajacy, ciało, nawias_klamrowy_zamykajacy, [ słowo_kluczowe_else, (nawias_klamrowy_otwierajacy, ciało, nawias_klamrowy_zamykajacy) | [instrukcja_warunkowa] ]

warunek = porównanie, { operator_logiczny, warunek }

porównanie = wyrażenie_złożone, [operator_porównania, wyrażenie złożone] | nawias_okragly_otwierajacy, warunek, nawias_okragly_zamykajacy | negacja, warunek

wyrażenie_złożone = wyrażenie_proste, { operator_liczbowy, wyrażenie_złożone }

wyrażenie_proste = wartość, { operator_liczbowy, wartość } |  nawias_okragly_otwierajacy, wyrażenie_złozone, nawias_okragly_zamykajacy | negacja, wyrażenie_złożone

wartość = liczba | identyfikator_zmiennej | wykonanie_funkcji | liczba_zespolona | negacja, wartość

cialo = wyrażenie_złożone | przypisanie | słowo_kluczowe_return, [operacja] | słowo_kluczowe_return, [warunek] | petla

petla = słowo_kluczowe_for, nawias_okragly_otwierajacy, przypisanie, srednik, porównanie, srednik, przypisanie, nawias_okragly_zamykajacy, nawias_klamrowy_otwierajacy, ciało, nawias klamrowy_zamykający

liczba = [ minus ], liczba_zmiennoprzecinkowa | [ minus ], liczba_całkowita

liczba_zmiennoprzecinkowa = liczba_całkowita_dziesiętna, separator_dziesiętny, { cyfra_dziesiętna }

liczba_całkowita = liczba_całkowita_dziesiętna | liczba_całkowita_szesnastkowa | liczba_całkowita_ósemkowa | liczba_całkowita_binarna

liczba_całkowita_dziesiętna = cyfra_dziesiętna_bez_zera, { cyfra_dzisiętna }

liczba_całkowita_ósemkowa = prefix_ósemkowy, cyfra_ósemkowa_bez_zera, { cyfra_ósemkowa }

liczba_całkowita_szesnastkowa = prefix_szesnastowky, cyfra_szesnastkowa_bez_zera, { cyfra_szesnastkowa }

liczba_całkowita_binarna = prefix_binarny, cyfra_binarna_bez_zera, { cyfra_binarna }

liczba_zespolona = nawias_okragly_otwierajacy, liczba, przecinek, liczba, nawias_okragly_zamykajacy
